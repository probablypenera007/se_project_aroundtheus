!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__button_submit",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:".modal__form"},t=[...document.querySelectorAll(e.formSelector)],r=(document.querySelectorAll(".modal"),document.querySelector("#profile-button-edit")),s=document.querySelector("#modal-edit-profile"),o=(s.querySelector("#modal-edit-button-close"),document.querySelector(".profile__name"),document.querySelector(".profile__subtitle"),document.querySelector("#edit-name"),document.querySelector("#edit-bio"),s.querySelector("#modal-form-edit"),document.querySelector("#modal-button-save"),document.querySelector("#profile-button-add")),n=document.querySelector("#modal-add-profile"),i=n.querySelector("#add-modal-form"),a=(n.querySelector("#modal-button-close-add"),document.querySelector("#modal-button-create"),i.querySelector("#add-title"),i.querySelector("#add-imageURL"),document.querySelector("#modal-previewImage")),l=(document.querySelector(".modal__previewImage"),document.querySelector("#preview-title"),a.querySelector("#modal-button-close-preview"),document.querySelector("#modal-confirm-delete")),c=(l.querySelector("#modal-button-confirm-delete"),l.querySelector("#modal-delete-form"),l.querySelector("#modal-button-confirm-delete"),document.querySelector("#modal-avatar")),d=document.querySelector(".profile__avatar-button"),u=(document.querySelector("#profile-avatar"),c.querySelector("#modal-button-close-avatar"),document.querySelector("#avatar-modal-form"));u.querySelector("#avatar-imageURL"),u.querySelector("#modal-button-avatar"),document.querySelector(".cards__content"),document.querySelector("#card-template").content.firstElementChild.cloneNode(!0);class h{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(t.querySelectorAll(this._inputSelector)),this._submitButton=t.querySelector(this._submitButtonSelector)}_showInputError(e,t){e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e,t){const r=e.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),r.textContent=" ",r.classList.remove(this._errorClass)}_checkInputValidity(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(t,e.querySelector(`#${t.id}-error`))}_checkFormValidity=()=>this._inputElements.every((e=>e.validity.valid));resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(this._form,e)}))}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(this._form,e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this.setEventListeners()}}class m{constructor(e,t,r,s,o){let{name:n,link:i,_id:a,isLiked:l}=e;this._name=n,this._link=i,this._id=a,this.isLiked=l,this._cardSelector=t,this._handleCardClick=r,this._handleTrashButtonClick=s,this._handleHeartButton=o}_setEventListeners(){this._heartButton.addEventListener("click",(()=>{this._handleHeartButton(this)})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>this._handleTrashButtonClick(this))),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick({name:this._name,link:this._link})}))}removeCard(e){this._cardElement.remove(),console.log("removecard method firing"),this._cardElement=null}setLikeStatus(e){this.isLiked=e,this._renderLikes()}_renderLikes(){this.isLiked?this._heartButton.classList.add("card__like-button_active"):(this._heartButton.classList.remove("card__like-button_active"),console.log("like removed from set like status"))}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCardElement(){this._cardElement=this._getElement();const e=this._cardElement.querySelector(".card__title"),t=this._cardElement.querySelector(".card__image");return this._heartButton=this._cardElement.querySelector(".card__like-button"),t.src=this._link,t.alt=this._name,e.textContent=this._name,this._setEventListeners(),this._renderLikes(),this._cardElement}getId(){return this._id}}class _{constructor(e,t){let{items:r,renderer:s}=e;this._items=r,this._renderer=s,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}class p{constructor(e){this._popupElement=document.querySelector(e),this._closeByEscape=this._closeByEscape.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeByEscape)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeByEscape),this._popupElement.removeEventListener("mousedown",this._closeOverlaybyClick)}_closeByEscape=e=>{"Escape"===e.key&&this.close()};setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__button-close"))&&this.close()}))}}class S extends p{constructor(e,t){super(e),this._popForm=this._popupElement.querySelector(".modal__form"),this._popSubmitBtn=this._popForm.querySelector(".modal__button_submit"),this._popInputs=this._popForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t,this._popSubmitBtnText=this._popSubmitBtn.textContent}_getInputValues(){const e={};return this._popInputs.forEach((t=>{e[t.name]=t.value})),e}_handleSubmit(e){e.preventDefault();const t=this._getInputValues();this.setLoading(!0),this._handleFormSubmit(t).then((()=>{this.close()})).catch((e=>{console.error(e)})).finally((()=>this.setLoading(!1)))}setEventListeners(){super.setEventListeners(),this._popForm.addEventListener("submit",(e=>this._handleSubmit(e)))}setInputValues(e){this._popInputs.forEach((t=>{e[t.name]&&(t.value=e[t.name])}))}close(){this._popForm.reset(),super.close()}setLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._popSubmitBtn.textContent=e?t:this._popSubmitBtnText}setSubmitCall(e){this._handleFormSubmit=e}}const E=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`'Error:' ${e.status}`)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._checkResponse)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._checkResponse)}createCard(e){let{name:t,link:r}=e;return fetch(`${this._baseUrl}/cards`,{method:"POST",body:JSON.stringify({name:t,link:r}),headers:this._headers}).then(this._checkResponse)}updateEditProfile(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",body:JSON.stringify({name:t,about:r}),headers:this._headers}).then(this._checkResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}likeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._checkResponse)}unlikeCard(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._checkResponse)}updateAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",body:JSON.stringify({avatar:e}),headers:this._headers}).then(this._checkResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"b6ce0d00-402e-481d-9dba-ef02482eb8ce","Content-Type":"application/json"}}),v={},b=new class{constructor(e,t,r){this._nameElement=document.querySelector(e),this._aboutElement=document.querySelector(t),this._avatarElement=document.querySelector(r)}getUserInfo(){return{name:this._nameElement.textContent,about:this._aboutElement.textContent,avatar:this._avatarElement.src}}setUserInfo(e){this._nameElement.textContent=e.name,this._aboutElement.textContent=e.about}setAvatar(e){this._avatarElement.src=e,this._avatarElement.alt=this._nameElement.textContent}}(".profile__name",".profile__subtitle","#profile-avatar");function y(e){let{name:t,link:r,isLiked:s,_id:o}=e;return new m({name:t,link:r,isLiked:s,_id:o},"#card-template",I,B,w).getCardElement()}let f;Promise.all([E.getInitialCards(),E.getUserInfo()]).then((e=>{let[t,r]=e;f=new _({items:t,renderer:e=>{const t=y(e);f.addItem(t)}},".cards__content"),f.renderItems(),b.setUserInfo(r),b.setAvatar(r.avatar)})).catch((e=>{console.error(e)}));const k=new class extends p{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__previewImage"),this._caption=this._popupElement.querySelector("#preview-title")}open(e){super.open(),e&&(this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name)}}("#modal-previewImage");k.setEventListeners();const L=new S("#modal-edit-profile",(e=>{let{name:t,about:r}=e;return E.updateEditProfile({name:t,about:r}).then((e=>{b.setUserInfo(e)}))}));L.setEventListeners();const q=new S("#modal-add-profile",(e=>new Promise(((t,r)=>{var s,o;(s=e.name,o=e.link,E.createCard({name:s,link:o}).then((e=>{f.addItem(y(e))}))).then((()=>{t()}))}))));q.setEventListeners();const C=new S("#modal-avatar",(e=>{const t=e.avatar;return E.updateAvatar(t).then((e=>{b.setAvatar(e.avatar)}))}));C.setEventListeners();const g=new class extends p{constructor(e){super(e),this._popForm=this._popupElement.querySelector(".modal__form"),this._deletePopup=document.querySelector("#modal-confirm-delete"),this._deletePopupCloseBtn=this._popupElement.querySelector("#modal-button-close-confirm-delete"),this._deletePopupSubmit=this._popupElement.querySelector("#modal-button-confirm-delete"),this._deletePopUpSubmitText=this._deletePopupSubmit.textContent}setEventListeners(){super.setEventListeners(),this._popForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(e)}))}setDeleting=(()=>{var e=this;return function(t){let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Deleting...";e._deletePopupSubmit.textContent=t?r:e._deletePopUpSubmitText}})();setSubmitCall(e){this._handleFormSubmit=e}}("#modal-confirm-delete");function I(e){k.open(e)}function B(e){g.setSubmitCall((()=>{g.setDeleting(!0),E.deleteCard(e.getId()).then((()=>{e.removeCard(),g.close()})).catch((e=>{console.error("Error:",e)})).finally((()=>g.setDeleting(!1)))})),g.open()}function w(e){e.isLiked?E.unlikeCard(e.getId()).then((t=>{console.log(t),e.setLikeStatus(t.isLiked)})).catch((e=>{console.error("Error:",e)})):E.likeCard(e.getId()).then((t=>{console.log(t),e.setLikeStatus(t.isLiked)})).catch((e=>{console.error("Error:",e)}))}g.setEventListeners(),(e=>{t.forEach((t=>{const r=new h(e,t),s=t.getAttribute("name");v[s]=r,r.enableValidation()}))})(e),r.addEventListener("click",(()=>{const e=b.getUserInfo();v["modal-edit-form"].resetValidation(),L.setInputValues(e),L.open()})),o.addEventListener("click",(()=>{v["modal-add-form"].resetValidation(),q.open()})),d.addEventListener("click",(()=>{b.getUserInfo(),v["modal-avatar-form"].resetValidation(),C.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,