!function(){"use strict";const e={inputSelector:".modal__input",submitButtonSelector:".modal__button_submit",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__error_visible",formSelector:".modal__form"},t=[...document.querySelectorAll(e.formSelector)],s=(document.querySelectorAll(".modal"),document.querySelector("#profile-button-edit")),o=document.querySelector("#modal-edit-profile"),n=(o.querySelector("#modal-edit-button-close"),document.querySelector(".profile__name"),document.querySelector(".profile__subtitle"),document.querySelector("#edit-name"),document.querySelector("#edit-bio"),o.querySelector("#modal-form-edit"),document.querySelector("#profile-button-add")),r=document.querySelector("#modal-add-profile"),i=r.querySelector("#add-modal-form"),a=(r.querySelector("#modal-button-close-add"),i.querySelector("#add-title"),i.querySelector("#add-imageURL"),document.querySelector("#modal-previewImage"));document.querySelector(".modal__previewImage"),document.querySelector("#preview-title"),a.querySelector("#modal-button-close-preview"),document.querySelector("#modal-button-create"),document.querySelector("#modal-button-save"),document.querySelector(".cards__content"),document.querySelector("#card-template").content.firstElementChild.cloneNode(!0);class l{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._form=t,this._inputElements=Array.from(t.querySelectorAll(this._inputSelector)),this._submitButton=t.querySelector(this._submitButtonSelector)}_showInputError(e,t){e.classList.add(this._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(this._errorClass)}_hideInputError(e,t){const s=e.querySelector(`#${t.id}-error`);t.classList.remove(this._inputErrorClass),s.textContent=" ",s.classList.remove(this._errorClass)}_checkInputValidity(e,t){t.validity.valid?this._hideInputError(e,t):this._showInputError(t,e.querySelector(`#${t.id}-error`))}_checkFormValidity=()=>this._inputElements.every((e=>e.validity.valid));resetValidation(){this.toggleButtonState(),this._inputElements.forEach((e=>{this._hideInputError(this._form,e)}))}toggleButtonState(){this._checkFormValidity()?(this._submitButton.classList.remove(this._inactiveButtonClass),this._submitButton.disabled=!1):(this._submitButton.classList.add(this._inactiveButtonClass),this._submitButton.disabled=!0)}setEventListeners(){this._inputElements.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(this._form,e),this.toggleButtonState()}))}))}enableValidation(){this._form.addEventListener("submit",(e=>{e.preventDefault()})),this.setEventListeners()}}class c{constructor(e,t,s){let{name:o,link:n}=e;this._name=o,this._link=n,this._cardSelector=t,this._handleCardClick=s}_setEventListeners(){this._cardElement.querySelector(".card__like-button").addEventListener("click",(()=>{this._handleHeartButton()})),this._cardElement.querySelector(".card__delete-button").addEventListener("click",(()=>{this._handleTrashButton()})),this._cardElement.querySelector(".card__image").addEventListener("click",(()=>{this._handleCardClick({name:this._name,link:this._link})}))}_handleHeartButton(){this._cardElement.querySelector(".card__like-button").classList.toggle("card__like-button_active")}_handleTrashButton(){this._cardElement.remove(),this._cardElement=null}_getElement(){return document.querySelector(this._cardSelector).content.querySelector(".card").cloneNode(!0)}getCardElement(){this._cardElement=this._getElement();const e=this._cardElement.querySelector(".card__title"),t=this._cardElement.querySelector(".card__image");return t.src=this._link,t.alt=this._name,e.textContent=this._name,this._setEventListeners(),this._cardElement}}class u{constructor(e){this._popupElement=document.querySelector(e),this._closeByEscape=this._closeByEscape.bind(this),this._closeOverlaybyClick=this._closeOverlaybyClick.bind(this)}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._closeByEscape),this._popupElement.addEventListener("mousedown",this._closeOverlaybyClick)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._closeByEscape),this._popupElement.removeEventListener("mousedown",this._closeOverlaybyClick)}_closeByEscape=e=>{"Escape"===e.key&&this.close()};_closeOverlaybyClick(e){e.target.classList.contains("modal_opened")&&this.close()}setEventListeners(){this._popupElement.addEventListener("mousedown",(e=>{(e.target.classList.contains("modal_opened")||e.target.classList.contains("modal__button-close"))&&this.close()}))}}class d extends u{constructor(e,t){super(e),this._popForm=this._popupElement.querySelector(".modal__form"),this._popSubmitBtn=this._popForm.querySelector(".modal__button_submit"),this._popInputs=this._popForm.querySelectorAll(".modal__input"),this._handleFormSubmit=t}_getInputValues(){const e={};return this._popInputs.forEach((t=>{e[t.name]=t.value})),e}_handleSubmit(e){e.preventDefault();const t=this._getInputValues();this._handleFormSubmit(t),this.close()}setEventListeners(){super.setEventListeners(),this._popForm.addEventListener("submit",this._handleSubmit.bind(this))}setInputValues(e){this._popInputs.forEach((t=>{e[t.name]&&(t.value=e[t.name])}))}close(){this._popForm.reset(),super.close()}}const m={},_=new class{constructor(e,t){this._nameElement=document.querySelector(e),this._jobElement=document.querySelector(t)}getUserInfo(){return{name:this._nameElement.textContent,job:this._jobElement.textContent}}setUserInfo(e){this._nameElement.textContent=e.name,this._jobElement.textContent=e.job}}(".profile__name",".profile__subtitle");function h(e){return new c(e,"#card-template",v).getCardElement()}const p=new class{constructor(e,t){let{items:s,renderer:o}=e;this._items=s,this._renderer=o,this._container=document.querySelector(t)}renderItems(){this._items.forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({items:[{name:"Yosemite Valley",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/yosemite.jpg"},{name:"Lake Louise",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lake-louise.jpg"},{name:"Bald Mountains",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/bald-mountains.jpg"},{name:"Latemar",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/latemar.jpg"},{name:"Vanoise National Park",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/vanoise.jpg"},{name:"Lago di Braies",link:"https://practicum-content.s3.us-west-1.amazonaws.com/software-engineer/around-project/lago.jpg"}],renderer:e=>{const t=h(e);p.addItem(t)}},".cards__content");p.renderItems();const E=new class extends u{constructor(e){super(e),this._image=this._popupElement.querySelector(".modal__previewImage"),this._caption=this._popupElement.querySelector("#preview-title")}open(e){super.open(),e&&(this._image.src=e.link,this._image.alt=e.name,this._caption.textContent=e.name)}}("#modal-previewImage");E.setEventListeners();const y=new d("#modal-edit-profile",(e=>{_.setUserInfo(e),y.close()}));y.setEventListeners();const S=new d("#modal-add-profile",(e=>{!function(e,t){const s=h({name:e,link:t});p.addItem(s),S.close()}(e.name,e.link)}));function v(e){E.open(e)}S.setEventListeners(),(e=>{t.forEach((t=>{const s=new l(e,t),o=t.getAttribute("name");m[o]=s,s.enableValidation()}))})(e),s.addEventListener("click",(()=>{const e=_.getUserInfo();m["modal-edit-form"].resetValidation(),y.setInputValues(e),y.open()})),n.addEventListener("click",(()=>{m["modal-add-form"].resetValidation(),S.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,